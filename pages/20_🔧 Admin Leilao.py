# -*- coding: utf-8 -*-
import streamlit as st
from datetime import datetime, timedelta
from supabase import create_client
from utils import registrar_movimentacao

st.set_page_config(page_title="üßë‚Äç‚öñÔ∏è Administra√ß√£o de Leil√µes (Fila)", layout="wide")

# üîê Conex√£o Supabase
url = st.secrets["supabase"]["url"]
key = st.secrets["supabase"]["key"]
supabase = create_client(url, key)

# ‚úÖ Verifica login
if "usuario_id" not in st.session_state or not st.session_state["usuario_id"]:
    st.warning("Voc√™ precisa estar logado para acessar esta p√°gina.")
    st.stop()

# üëë Verifica admin
usuario_atual = st.session_state.get("usuario", "").lower()
try:
    admin_ref = supabase.table("admins").select("email").execute()
    emails_admin = [item["email"].lower() for item in admin_ref.data]
except Exception as e:
    emails_admin = []
    st.error("Erro ao verificar administradores.")

if usuario_atual not in emails_admin:
    st.warning("üîê Acesso restrito a administradores.")
    st.stop()

st.title("üßë‚Äç‚öñÔ∏è Administra√ß√£o de Leil√µes (Fila)")

# üìã Adicionar novo leil√£o manualmente
with st.form("novo_leilao"):
    nome = st.text_input("Nome do Jogador").strip()
    posicao = st.selectbox("Posi√ß√£o", [
        "Goleiro (GL)", "Lateral direito (LD)", "Zagueiro (ZAG)", "Lateral esquerdo (LE)",
        "Volante (VOL)", "Meio campo (MC)", "Meia direita (MD)", "Meia esquerda (ME)",
        "Ponta direita (PD)", "Ponta esquerda (PE)", "Segundo atacante (SA)", "Centroavante (CA)"
    ])
    overall = st.number_input("Overall", min_value=1, max_value=99)
    valor_inicial = st.number_input("Valor Inicial (R$)", min_value=100_000, step=50_000)
    incremento = st.number_input("Incremento m√≠nimo (R$)", min_value=100_000, step=50_000, value=3_000_000)
    origem = st.text_input("Origem do Jogador (ex: Real Madrid)")
    nacionalidade = st.text_input("Nacionalidade (ex: Brasil)")
    imagem_url = st.text_input("URL da Imagem do Jogador (opcional)")
    tempo_duracao = st.number_input("‚è±Ô∏è Dura√ß√£o do Leil√£o (em minutos)", min_value=1, value=2)
    botao = st.form_submit_button("Adicionar √† Fila")

    if botao and nome:
        novo = {
            "nome_jogador": nome,
            "posicao_jogador": posicao,
            "overall_jogador": overall,
            "valor_inicial": valor_inicial,
            "valor_atual": valor_inicial,
            "incremento_minimo": incremento,
            "inicio": None,
            "fim": None,
            "ativo": False,
            "finalizado": False,
            "origem": origem,
            "nacionalidade": nacionalidade,
            "imagem_url": imagem_url,
            "enviado_bid": False,
            "validado": False,
            "aguardando_validacao": False,
            "duracao_minutos": tempo_duracao
        }
        supabase.table("leiloes").insert(novo).execute()
        st.success("‚úÖ Jogador adicionado √† fila.")

# üîÑ Ativar at√© 3 leil√µes
ativos = supabase.table("leiloes").select("*").eq("ativo", True).eq("finalizado", False).execute().data

if ativos:
    st.subheader("üî¥ Leil√µes Ativos")
    for ativo in ativos:
        st.markdown(f"**Jogador:** {ativo['nome_jogador']}")
        st.markdown(f"**Posi√ß√£o:** {ativo['posicao_jogador']}")
        st.markdown(f"**Valor Atual:** R$ {ativo['valor_atual']:,.0f}".replace(",", "."))
        st.markdown(f"**Origem:** {ativo.get('origem', 'Desconhecida')}")
        st.markdown(f"**Nacionalidade:** {ativo.get('nacionalidade', 'Desconhecida')}")

        if ativo.get("imagem_url"):
            st.image(ativo["imagem_url"], width=200)

        fim = datetime.fromisoformat(ativo["fim"])
        restante = fim - datetime.utcnow()

        if restante.total_seconds() <= 0:
            supabase.table("leiloes").update({"ativo": False, "aguardando_validacao": True}).eq("id", ativo["id"]).execute()
            st.info(f"‚è±Ô∏è Leil√£o de {ativo['nome_jogador']} marcado como aguardando valida√ß√£o.")
            st.experimental_rerun()
        else:
            st.info(f"‚è≥ Tempo restante: {int(restante.total_seconds())} segundos")
else:
    inativos = supabase.table("leiloes") \
        .select("*") \
        .eq("ativo", False) \
        .eq("finalizado", False) \
        .eq("aguardando_validacao", False) \
        .order("valor_atual") \
        .limit(3) \
        .execute().data

    if inativos:
        for leilao in inativos:
            agora = datetime.utcnow()
            minutos = leilao.get("duracao_minutos", 2)
            fim = agora + timedelta(minutes=minutos)
            supabase.table("leiloes").update({
                "ativo": True,
                "inicio": agora.isoformat(),
                "fim": fim.isoformat()
            }).eq("id", leilao["id"]).execute()
        st.success("‚úÖ Novos leil√µes iniciados automaticamente.")
        st.experimental_rerun()
    else:
        st.info("‚úÖ Nenhum leil√£o ativo. Fila vazia.")

# üìÑ Valida√ß√£o dos leil√µes
pendentes = supabase.table("leiloes") \
    .select("*") \
    .eq("aguardando_validacao", True) \
    .eq("validado", False) \
    .order("fim", desc=True) \
    .limit(5) \
    .execute()

if pendentes.data:
    st.subheader("üìÑ Leil√µes Aguardando Valida√ß√£o do Administrador")
    for item in pendentes.data:
        nome = item.get("nome_jogador", "Desconhecido")
        posicao = item.get("posicao_jogador", "ND")
        valor = item.get("valor_atual", 0)
        id_time = item.get("id_time_atual")
        origem = item.get("origem", "")
        nacionalidade = item.get("nacionalidade", "")

        st.markdown(f"**{nome}** ({posicao}) - R$ {valor:,.0f}".replace(",", "."))

        if st.button(f"‚úÖ Validar Leil√£o de {nome}", key=f"val_{item['id']}"):
            try:
                supabase.table("elenco").insert({
                    "id_time": id_time,
                    "nome": nome,
                    "posicao": posicao,
                    "overall": item["overall_jogador"],
                    "valor": valor,
                    "origem": origem,
                    "nacionalidade": nacionalidade,
                    "imagem_url": item.get("imagem_url", "")
                }).execute()

                registrar_movimentacao(
                    id_time=id_time,
                    tipo="saida",
                    valor=valor,
                    descricao=f"Compra do jogador {nome} via leil√£o",
                    jogador=nome,
                    categoria="leilao",
                    origem=origem,
                    destino=""
                )

                supabase.table("leiloes").update({
                    "validado": True,
                    "finalizado": True,
                    "enviado_bid": True,
                    "aguardando_validacao": False
                }).eq("id", item["id"]).execute()

                st.success(f"‚úÖ {nome} validado, saldo descontado e registrado no BID.")
                st.experimental_rerun()

            except Exception as e:
                st.error(f"Erro ao validar o leil√£o: {e}")

# üßπ Limpar hist√≥rico
st.subheader("ü™® Limpar Hist√≥rico de Leil√µes Enviados ao BID")
if st.button("üßº Apagar Hist√≥rico de Leil√µes Enviados"):
    try:
        supabase.table("leiloes") \
            .delete() \
            .eq("finalizado", True) \
            .eq("enviado_bid", True) \
            .execute()
        st.success("üßπ Hist√≥rico apagado com sucesso!")
        st.experimental_rerun()
    except Exception as e:
        st.error(f"Erro ao apagar hist√≥rico: {e}")


